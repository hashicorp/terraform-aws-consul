defaults: &defaults
  docker:
    - image: 087285199408.dkr.ecr.us-east-1.amazonaws.com/circle-ci-test-image-base:go1.16-tf1.0-tg31.1-pck1.7
version: 2
jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - run: echo 'export PATH=$HOME/terraform:$HOME/packer:$PATH' >> $BASH_ENV
      - run:
          # Fail the build if the pre-commit hooks don't pass. Note: if you run $ pre-commit install locally within this repo, these hooks will
          # execute automatically every time before you commit, ensuring the build never fails at this step!
          name: run pre-commit hooks
          command: |
            pip install pre-commit==1.21.0 cfgv==2.0.1
            pre-commit install
            pre-commit run --all-files
      - run:
          command: |
            mkdir -p /tmp/logs
            run-go-tests --path test | tee /tmp/logs/test-all.log
      - run:
          command: terratest_log_parser --testlog /tmp/logs/test-all.log --outputdir /tmp/logs
          when: always
      - store_artifacts:
          path: /tmp/logs
      - store_test_results:
          path: /tmp/logs
  deploy:
    <<: *defaults
    steps:
      - checkout
      - run: echo 'export PATH=$HOME/terraform:$HOME/packer:$PATH' >> $BASH_ENV
      - run: sudo -E gruntwork-install --module-name "aws-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.12.2"
      - run: sudo -E gruntwork-install --module-name "git-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.12.2"
      - run: sudo -E gruntwork-install --module-name "build-helpers" --repo "https://github.com/gruntwork-io/module-ci" --tag "v0.12.2"
      # We generally only want to build AMIs on new releases, but when we are setting up AMIs in a new account for the
      # first time, we want to build the AMIs but NOT run automated tests, since those tests will fail without an existing
      # AMI already in the AWS Account.
      - run: _ci/publish-amis.sh "ubuntu16-ami"
      - run: _ci/publish-amis.sh "ubuntu18-ami"
      - run: _ci/publish-amis.sh "amazon-linux-2-ami"
workflows:
  version: 2
  build-and-test:
    jobs:
      - test:
          filters:
            branches:
              ignore: publish-amis
      - deploy:
          filters:
            branches:
              only: publish-amis
            tags:
              only: /^v.*/
